{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst stringMiddleware = () => next => action => {\n  if (typeof action === \"string\") {\n    return next({\n      type: action\n    });\n  }\n\n  return next(action);\n};\n\nconst logMiddleware = store => next => action => {\n  console.log(action, store.getState());\n  return next(action);\n};\n\nconst store = createStore(reducer, applyMiddleware(stringMiddleware, logMiddleware)); // const enhancer = (createStore) => (...args) => {\n//     const store = createStore(...args);\n//     const originalDispatch = store.dispatch;\n//     store.dispatch = (action) => {\n//         if (typeof action === \"string\") {\n//             return originalDispatch ({\n//                 type: action\n//             })\n//         }\n//         return originalDispatch(action)\n//     }\n//     return store\n// };\n// const logEnhancer = (createStore) => (...args) => {\n//     const store = createStore(...args);\n//     const originalDispatch = store.dispatch;\n//     store.dispatch = (action) => {\n//         console.log(action, store.getState());\n//         return originalDispatch(action)\n//     }\n//     return store\n// }\n// const store = createStore(reducer, compose(enhancer,logEnhancer));\n\nstore.dispatch(\"HELLO\");\nexport default store;","map":{"version":3,"names":["applyMiddleware","createStore","reducer","stringMiddleware","next","action","type","logMiddleware","store","console","log","getState","dispatch"],"sources":["C:/Users/user/Desktop/front end/homework/REACT/f/src/redux/store.js"],"sourcesContent":["import {applyMiddleware, createStore} from \"redux\";\nimport reducer from \"./reducers\";\n\nconst stringMiddleware = () => (next) => (action) => {\n    \n    if (typeof action === \"string\") {\n        return next ({\n            type: action\n        });\n    }\n\n    return next(action);\n};\n\nconst logMiddleware = (store) => (next) => (action) => {\n    \n    console.log(action, store.getState());\n    return next(action)\n   \n}\n\nconst store = createStore(reducer, applyMiddleware(stringMiddleware,logMiddleware));\n\n// const enhancer = (createStore) => (...args) => {\n//     const store = createStore(...args);\n//     const originalDispatch = store.dispatch;\n\n//     store.dispatch = (action) => {\n//         if (typeof action === \"string\") {\n//             return originalDispatch ({\n//                 type: action\n//             })\n//         }\n\n//         return originalDispatch(action)\n//     }\n\n//     return store\n// };\n\n// const logEnhancer = (createStore) => (...args) => {\n//     const store = createStore(...args);\n//     const originalDispatch = store.dispatch;\n//     store.dispatch = (action) => {\n//         console.log(action, store.getState());\n\n//         return originalDispatch(action)\n//     }\n\n//     return store\n\n// }\n\n// const store = createStore(reducer, compose(enhancer,logEnhancer));\n\nstore.dispatch(\"HELLO\")\n\nexport default store;"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,gBAAgB,GAAG,MAAOC,IAAD,IAAWC,MAAD,IAAY;EAEjD,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC5B,OAAOD,IAAI,CAAE;MACTE,IAAI,EAAED;IADG,CAAF,CAAX;EAGH;;EAED,OAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CATD;;AAWA,MAAME,aAAa,GAAIC,KAAD,IAAYJ,IAAD,IAAWC,MAAD,IAAY;EAEnDI,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAAoBG,KAAK,CAACG,QAAN,EAApB;EACA,OAAOP,IAAI,CAACC,MAAD,CAAX;AAEH,CALD;;AAOA,MAAMG,KAAK,GAAGP,WAAW,CAACC,OAAD,EAAUF,eAAe,CAACG,gBAAD,EAAkBI,aAAlB,CAAzB,CAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAEAC,KAAK,CAACI,QAAN,CAAe,OAAf;AAEA,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}